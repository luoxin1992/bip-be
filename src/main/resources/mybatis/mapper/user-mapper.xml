<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xmu.sy.ext.mapper.UserMapper">
    <resultMap id="userMap" type="cn.edu.xmu.sy.ext.domain.UserDO">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="number" jdbcType="VARCHAR" property="number"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify"/>
    </resultMap>

    <sql id="generalInsertColumns">
        id, number, name, photo, gmt_create, gmt_modify
    </sql>

    <sql id="generalSelectColumns">
        id, number, name, photo
    </sql>

    <insert id="save" parameterType="cn.edu.xmu.sy.ext.domain.UserDO">
        insert into tbl_user(<include refid="generalInsertColumns"/>)
        values(#{id}, #{number}, #{name}, #{photo}, #{gmtCreate}, #{gmtModify})
    </insert>

    <insert id="saveBatch" parameterType="cn.edu.xmu.sy.ext.domain.UserDO">
        insert into tbl_user(<include refid="generalInsertColumns"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id}, #{item.number}, #{item.name}, #{item.photo}, #{item.gmtCreate}, #{item.gmtModify})
        </foreach>
    </insert>

    <update id="updateById" parameterType="cn.edu.xmu.sy.ext.domain.UserDO">
        update tbl_user
        set gmt_modify = #{gmtModify}
        <if test="number != null">
            , number = #{number}
        </if>
        <if test="name != null">
            , name = #{name}
        </if>
        <if test="photo != null">
            , photo = #{photo}
        </if>
        where id = #{id} and is_delete = 0
    </update>

    <update id="removeById" parameterType="java.lang.Long">
        <!--TODO 未修改gmt_modify字段-->
        update tbl_user set is_delete = 1
        where id = #{id} and is_delete = 0
    </update>

    <select id="getById" parameterType="java.lang.Long" resultMap="userMap">
        select
        <include refid="generalSelectColumns"/>
        from tbl_user
        where id = #{id} and is_delete = 0
    </select>

    <select id="countAll" resultType="java.lang.Long">
        select count(1)
        from tbl_user
        where is_delete = 0
    </select>

    <select id="listByPaging" resultMap="userMap">
        select
        <include refid="generalSelectColumns"/>
        from tbl_user
        where is_delete = 0
        <if test="rows != null">
            <if test="offset != null">
                limit ${offset}, ${rows}
            </if>
            <if test="offset == null">
                limit ${rows}
            </if>
        </if>
    </select>

    <select id="countByParam" parameterType="cn.edu.xmu.sy.ext.param.UserQueryParam" resultType="java.lang.Long">
        select count(1) from tbl_user
        where is_delete = 0
        <if test="search.keyword != null">
            and match(number, name) against(#{search.keyword} in boolean mode)
        </if>
    </select>

    <select id="queryByParam" parameterType="cn.edu.xmu.sy.ext.param.UserQueryParam" resultMap="userMap">
        select
        <include refid="generalSelectColumns"/>
        from tbl_user
        where is_delete = 0
        <if test="search.keyword != null">
            <!--and (number like concat(#{search.keyword}, '%') or name like concat(#{search.keyword}, '%'))-->
            <!--MySQL 5.7以后fulltext索引支持ngram中文分词-->
            and match(number, name) against(#{search.keyword} in boolean mode)
            <if test="paging.start != null">
                limit ${paging.start}, ${paging.size}
            </if>
            <if test="paging.start == null">
                limit ${paging.size}
            </if>
        </if>
        <if test="search.keyword == null">
            <if test="paging.start != null">
                and #{paging.start} > id
            </if>
            order by id desc
            limit ${paging.size}
        </if>
    </select>

    <select id="getIdByNumber" resultType="java.lang.Long">
        select id from tbl_user
        where number = #{number} and is_delete = 0
        <if test="exclude != null">
            and id != #{exclude}
        </if>
        limit 1
    </select>
</mapper>